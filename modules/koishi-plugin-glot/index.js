var f=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var G=Object.prototype.hasOwnProperty;var L=(t,e)=>()=>(t&&(e=t(t=0)),e);var h=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var g=(t,e,n,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of b(e))!G.call(t,a)&&a!==n&&f(t,a,{get:()=>e[a],enumerable:!(r=k(e,a))||r.enumerable});return t},d=(t,e,n)=>(g(t,e,"default"),n&&g(n,e,"default"));var S=t=>g(f({},"__esModule",{value:!0}),t);var l={};import*as T from"https://registry.koishi.chat/modules/koishi/index.js";var m=L(()=>{d(l,T)});var y=h(c=>{"use strict";Object.defineProperty(c,"__esModule",{value:!0});c.LANGUAGES=void 0;c.LANGUAGES=[["assembly","asm"],["ats","dats"],["bash","sh"],["c","c"],["clojure","clj"],["cobol","cob"],["coffeescript","coffee"],["cpp","cpp"],["crystal","cr"],["csharp","cs"],["d","d"],["elixir","ex"],["elm","elm"],["erlang","erl"],["fsharp","fs"],["go","go"],["groovy","groovy"],["hare","hare"],["haskell","hs"],["idris","idr"],["java","java"],["javascript","js"],["julia","jl"],["kotlin","kt"],["lua","lua"],["mercury","m"],["nim","nim"],["nix","nix"],["ocaml","ml"],["perl","pl"],["php","php"],["python","py"],["raku","raku"],["ruby","rb"],["rust","rs"],["sac","sac"],["scala","scala"],["swift","swift"],["typescript","ts"],["zig","zig"]]});var E=h(s=>{Object.defineProperty(s,"__esModule",{value:!0});s.apply=s.name=s.Config=void 0;var u=(m(),S(l)),j=y(),_=new u.Logger("glot"),x="https://glot.io/api";async function w(t,e,n,r,a){try{let o={files:[{name:n,content:r}]};return a&&(o.stdin=a),await t.post(`/run/${e}/latest`,o)}catch(o){return _.error(o),null}}s.Config=u.Schema.object({apiToken:u.Schema.string().description("申请到的 API 令牌。"),defaultLanguage:u.Schema.string().default("javascript").description("默认的执行语言。")});s.name="glot";function $(t,e){let n=t.http.extend({endpoint:x,headers:{Authorization:`Token ${e.apiToken}`}});t.command("glot <code:rawtext>","运行代码").usage(`由 glot.io 提供的代码运行
支持的语言: ${j.LANGUAGES.map(r=>r[0]).join(", ")}`).option("language","-l <language:string>").option("stdin","-s <stdin:string>").example("glot console.log('Hello World!')").action(async({options:r},a)=>{var o;let v=(o=r.language)!==null&&o!==void 0?o:e.defaultLanguage,p=j.LANGUAGES.find(A=>A[0]===v);if(!p)return"不支持的语言。";if(!a)return"请输入代码。";let i=await w(n,p[0],`koishi.${p[1]}`,a,r.stdin);return i?i.error?`运行出错: ${i.error}
${i.stderr}`:i.stdout+i.stderr:"请求出错。"})}s.apply=$});export default E();
